{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ebene\\\\Downloads\\\\umat_tsap_application-v1.0.2\\\\src\\\\Routes.jsx\";\n// import React from \"react\";\n// import { BrowserRouter as Router, Routes, Route, Navigate } from \"react-router-dom\";\n// import NotFound from \"pages/NotFound\";\n// import MySubmissions from \"pages/MySubmissions\";\n// const FrameOne = React.lazy(() => import(\"pages/FrameOne\"));\n\n// const ProjectRoutes = () => {\n//   return (\n//     <React.Suspense fallback={<>Loading...</>}>\n//       <Router>\n//         <Routes>\n//           <Route path=\"/\" element={<Navigate to=\"/frameone\" />} />\n//           <Route path=\"/frameone\" element={<FrameOne />} />\n//           <Route path=\"*\" element={<NotFound />} />\n//         </Routes>\n//       </Router>\n//     </React.Suspense>\n//   );\n// };\n\n// export default ProjectRoutes;\n\n// import React from \"react\";\n// import {\n//   BrowserRouter as Router,\n//   Routes,\n//   Route,\n// } from \"react-router-dom\";\n// import NotFound from \"pages/NotFound\";\n// import FrameOne from \"pages/FrameOne\";\n// import MySubmissions from \"pages/MySubmissions\";\n// import ReportsPage from \"pages/Reports\";\n// import Login from \"pages/Login/Login\";\n// import AuthGuard from \"pages/AuthGuard/AuthGuard\";\n\n// const ProjectRoutes = () => {\n//   return (\n//     <React.Suspense fallback={<>Loading...</>}>\n//       <Router>\n//         <Routes>\n//           <Route path=\"/Frameone\" element={<AuthGuard><FrameOne /></AuthGuard>} />\n//           <Route path=\"/MySubmissions\" element={<AuthGuard><MySubmissions /></AuthGuard>} />\n//           <Route path=\"/Reports\" element={<AuthGuard><ReportsPage /></AuthGuard>} />\n//           <Route path=\"/Login\" element={<Login />} />\n//           <Route path=\"*\" element={<NotFound />} />\n//         </Routes>\n//       </Router>\n//     </React.Suspense>\n//   );\n// };\n\n// export default ProjectRoutes;\n\nimport React from \"react\";\nimport { Navigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthGuard = ({\n  isAuthenticated,\n  children\n}) => {\n  // Check if the user is authenticated\n  if (!isAuthenticated) {\n    // If not authenticated, redirect to login page\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 12\n    }, this);\n  }\n\n  // If authenticated, render the children components\n  return children;\n};\n_c = AuthGuard;\nexport default AuthGuard;\nvar _c;\n$RefreshReg$(_c, \"AuthGuard\");","map":{"version":3,"names":["React","Navigate","jsxDEV","_jsxDEV","AuthGuard","isAuthenticated","children","to","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ebene/Downloads/umat_tsap_application-v1.0.2/src/Routes.jsx"],"sourcesContent":["// import React from \"react\";\n// import { BrowserRouter as Router, Routes, Route, Navigate } from \"react-router-dom\";\n// import NotFound from \"pages/NotFound\";\n// import MySubmissions from \"pages/MySubmissions\";\n// const FrameOne = React.lazy(() => import(\"pages/FrameOne\"));\n\n// const ProjectRoutes = () => {\n//   return (\n//     <React.Suspense fallback={<>Loading...</>}>\n//       <Router>\n//         <Routes>\n//           <Route path=\"/\" element={<Navigate to=\"/frameone\" />} />\n//           <Route path=\"/frameone\" element={<FrameOne />} />\n//           <Route path=\"*\" element={<NotFound />} />\n//         </Routes>\n//       </Router>\n//     </React.Suspense>\n//   );\n// };\n\n// export default ProjectRoutes;\n\n// import React from \"react\";\n// import {\n//   BrowserRouter as Router,\n//   Routes,\n//   Route,\n// } from \"react-router-dom\";\n// import NotFound from \"pages/NotFound\";\n// import FrameOne from \"pages/FrameOne\";\n// import MySubmissions from \"pages/MySubmissions\";\n// import ReportsPage from \"pages/Reports\";\n// import Login from \"pages/Login/Login\";\n// import AuthGuard from \"pages/AuthGuard/AuthGuard\";\n\n// const ProjectRoutes = () => {\n//   return (\n//     <React.Suspense fallback={<>Loading...</>}>\n//       <Router>\n//         <Routes>\n//           <Route path=\"/Frameone\" element={<AuthGuard><FrameOne /></AuthGuard>} />\n//           <Route path=\"/MySubmissions\" element={<AuthGuard><MySubmissions /></AuthGuard>} />\n//           <Route path=\"/Reports\" element={<AuthGuard><ReportsPage /></AuthGuard>} />\n//           <Route path=\"/Login\" element={<Login />} />\n//           <Route path=\"*\" element={<NotFound />} />\n//         </Routes>\n//       </Router>\n//     </React.Suspense>\n//   );\n// };\n\n// export default ProjectRoutes;\n\n\n\n\nimport React from \"react\";\nimport { Navigate } from \"react-router-dom\";\n\nconst AuthGuard = ({ isAuthenticated, children }) => {\n  // Check if the user is authenticated\n  if (!isAuthenticated) {\n    // If not authenticated, redirect to login page\n    return <Navigate to=\"/Login\" />;\n  }\n\n  // If authenticated, render the children components\n  return children;\n};\n\nexport default AuthGuard;\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAKA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,SAAS,GAAGA,CAAC;EAAEC,eAAe;EAAEC;AAAS,CAAC,KAAK;EACnD;EACA,IAAI,CAACD,eAAe,EAAE;IACpB;IACA,oBAAOF,OAAA,CAACF,QAAQ;MAACM,EAAE,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACjC;;EAEA;EACA,OAAOL,QAAQ;AACjB,CAAC;AAACM,EAAA,GATIR,SAAS;AAWf,eAAeA,SAAS;AAAC,IAAAQ,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}