{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ebene\\\\Downloads\\\\umat_tsap_application-v1.0.2\\\\src\\\\pages\\\\Reports\\\\index.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n\n// const ReportsPage = () => {\n//    const [posts, setPosts] = useState([]);\n//    const [error, setError] = useState(null);\n\n//    useEffect(() => {\n//       fetch('https://jsonplaceholder.typicode.com/posts?_limit=10')\n//          .then((response) => {\n//             if (!response.ok) {\n//                throw new Error('Network response was not ok');\n//             }\n//             return response.json();\n//          })\n//          .then((data) => {\n//             console.log(data);\n//             setPosts(data);\n//          })\n//          .catch((error) => {\n//             console.error('Error fetching data:', error);\n//             setError(error);\n//          });\n//    }, []);\n\n//    return (\n//       <div>\n//          <h1>Reports</h1>\n//          <ul>\n//             {posts.map((post) => (\n//                <li key={post.id}>\n//                   <h2>{post.title}</h2>\n//                   <p>{post.body}</p>\n//                </li>\n//             ))}\n//          </ul>\n//       </div>\n//    );\n// };\n\n// export default ReportsPage;\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ReportsPage = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    fetch('https://jsonplaceholder.typicode.com/posts?_limit=10').then(response => response.json()).then(data => {\n      console.log(data);\n      setPosts(data);\n    }).catch(err => {\n      console.log(err.message);\n    });\n  }, []);\n  return (\n    /*#__PURE__*/\n    // ... consume here\n    _jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Reports\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: posts.map(post => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: post.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: post.body\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)]\n        }, post.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 10\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 4\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 4\n    }, this)\n  );\n};\n_s(ReportsPage, \"bG8V4duoIfO0BEPgauWMVT5Qvyw=\");\n_c = ReportsPage;\nexport default ReportsPage;\nvar _c;\n$RefreshReg$(_c, \"ReportsPage\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ReportsPage","_s","posts","setPosts","fetch","then","response","json","data","console","log","catch","err","message","children","fileName","_jsxFileName","lineNumber","columnNumber","map","post","title","body","id","_c","$RefreshReg$"],"sources":["C:/Users/ebene/Downloads/umat_tsap_application-v1.0.2/src/pages/Reports/index.jsx"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n\r\n// const ReportsPage = () => {\r\n//    const [posts, setPosts] = useState([]);\r\n//    const [error, setError] = useState(null);\r\n\r\n//    useEffect(() => {\r\n//       fetch('https://jsonplaceholder.typicode.com/posts?_limit=10')\r\n//          .then((response) => {\r\n//             if (!response.ok) {\r\n//                throw new Error('Network response was not ok');\r\n//             }\r\n//             return response.json();\r\n//          })\r\n//          .then((data) => {\r\n//             console.log(data);\r\n//             setPosts(data);\r\n//          })\r\n//          .catch((error) => {\r\n//             console.error('Error fetching data:', error);\r\n//             setError(error);\r\n//          });\r\n//    }, []);\r\n\r\n//    return (\r\n//       <div>\r\n//          <h1>Reports</h1>\r\n//          <ul>\r\n//             {posts.map((post) => (\r\n//                <li key={post.id}>\r\n//                   <h2>{post.title}</h2>\r\n//                   <p>{post.body}</p>\r\n//                </li>\r\n//             ))}\r\n//          </ul>\r\n//       </div>\r\n//    );\r\n// };\r\n\r\n// export default ReportsPage;\r\n\r\n\r\n\r\n\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nconst ReportsPage = () => {\r\n   const [posts, setPosts] = useState([]);\r\n   useEffect(() => {\r\n      fetch('https://jsonplaceholder.typicode.com/posts?_limit=10')\r\n         .then((response) => response.json())\r\n         .then((data) => {\r\n            console.log(data);\r\n            setPosts(data);\r\n         })\r\n         .catch((err) => {\r\n            console.log(err.message);\r\n         });\r\n   }, []);\r\n\r\nreturn (\r\n   // ... consume here\r\n   <div>\r\n   <h1>Reports</h1>\r\n   <ul>\r\n      {posts.map((post) => (\r\n         <li key={post.id}>\r\n            <h2>{post.title}</h2>\r\n            <p>{post.body}</p>\r\n         </li>\r\n      ))}\r\n   </ul>\r\n</div>\r\n);\r\n};\r\n\r\nexport default ReportsPage;"],"mappings":";;AAAA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAKA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtCC,SAAS,CAAC,MAAM;IACbO,KAAK,CAAC,sDAAsD,CAAC,CACzDC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;MACbC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;MACjBL,QAAQ,CAACK,IAAI,CAAC;IACjB,CAAC,CAAC,CACDG,KAAK,CAAEC,GAAG,IAAK;MACbH,OAAO,CAACC,GAAG,CAACE,GAAG,CAACC,OAAO,CAAC;IAC3B,CAAC,CAAC;EACR,CAAC,EAAE,EAAE,CAAC;EAET;IAAA;IACG;IACAd,OAAA;MAAAe,QAAA,gBACAf,OAAA;QAAAe,QAAA,EAAI;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAChBnB,OAAA;QAAAe,QAAA,EACIZ,KAAK,CAACiB,GAAG,CAAEC,IAAI,iBACbrB,OAAA;UAAAe,QAAA,gBACGf,OAAA;YAAAe,QAAA,EAAKM,IAAI,CAACC;UAAK;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACrBnB,OAAA;YAAAe,QAAA,EAAIM,IAAI,CAACE;UAAI;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA,GAFZE,IAAI,CAACG,EAAE;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAGZ,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;AAEN,CAAC;AAACjB,EAAA,CA5BID,WAAW;AAAAwB,EAAA,GAAXxB,WAAW;AA8BjB,eAAeA,WAAW;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}