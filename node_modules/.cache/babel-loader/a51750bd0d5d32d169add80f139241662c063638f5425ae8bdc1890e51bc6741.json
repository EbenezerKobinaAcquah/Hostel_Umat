{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ebene\\\\Downloads\\\\umat_tsap_application-v1.0.2\\\\src\\\\pages\\\\MySubmissions\\\\index.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport DataTable from \"react-data-table-component\";\nimport { SubmissionService } from \"components/Services/SubmissionService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SubmissionList = () => {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  const openNav = () => {\n    setIsOpen(true);\n  };\n  function handleNavigate() {\n    const win = window.open(\"https://umat.edu.gh\", \"_blank\");\n  }\n  const navigate = useNavigate();\n  const handleMySubmissionsClick = () => {\n    navigate(\"/MySubmissions\");\n  };\n  const columns = [{\n    name: \"id\",\n    selector: row => row.id.toString(),\n    sortable: true\n  }, {\n    name: \"StudentNumber\",\n    selector: row => row.studentNumber.toString(),\n    sortable: true\n  }, {\n    name: \"Title\",\n    selector: row => row.title.toString(),\n    sortable: true\n  }, {\n    name: \"First Name\",\n    selector: row => row.firstName.toString()\n  }];\n  const [records, setRecords] = useState([]);\n  useEffect(() => {\n    SubmissionService.getUserSubmissions().then(data => {\n      const reconstructedData = data.map(row => ({\n        id: row.id,\n        studentNumber: row.studentNumber,\n        title: row.title\n      }));\n      setRecords(reconstructedData);\n    }).catch(error => console.error(\"Error fetching submissions:\", error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(DataTable, {\n        columns: columns,\n        data: records,\n        selectableRows: true,\n        fixedHeader: true,\n        pagination: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(SubmissionList, \"N8QiRlGoipTrKtfWo4CYQ1X3b6Y=\", false, function () {\n  return [useNavigate];\n});\n_c = SubmissionList;\nexport default SubmissionList;\nvar _c;\n$RefreshReg$(_c, \"SubmissionList\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","DataTable","SubmissionService","jsxDEV","_jsxDEV","Fragment","_Fragment","SubmissionList","_s","isOpen","setIsOpen","openNav","handleNavigate","win","window","open","navigate","handleMySubmissionsClick","columns","name","selector","row","id","toString","sortable","studentNumber","title","firstName","records","setRecords","getUserSubmissions","then","data","reconstructedData","map","catch","error","console","children","selectableRows","fixedHeader","pagination","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ebene/Downloads/umat_tsap_application-v1.0.2/src/pages/MySubmissions/index.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nimport { Menu, MenuItem } from \"react-pro-sidebar\";\r\n\r\nimport { Button, Img, Line, Text } from \"components\";\r\nimport Sidebar1 from \"components/Sidebar1\";\r\nimport StudentProfile from \"components/StudentProfile\";\r\nimport SidebarOverlay from \"components/SidebarOverlay\";\r\nimport Footer from \"components/Footer\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\n\r\nimport DataTable, { TableColumn } from \"react-data-table-component\";\r\n\r\nimport { Submission } from \"components/Models/submissions\";\r\nimport { SubmissionService } from \"components/Services/SubmissionService\";\r\n\r\ninterface ReconstructedDataRow {\r\n  id: number;\r\n  studentNumber: string;\r\n  title: string;\r\n}\r\n\r\ninterface Name {\r\n  firstName: string\r\n  lastName: string\r\n  otherName: string\r\n}\r\n\r\nconst SubmissionList: React.FC = () => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const openNav = () => {\r\n    setIsOpen(true);\r\n  };\r\n\r\n  function handleNavigate() {\r\n    const win = window.open(\"https://umat.edu.gh\", \"_blank\");\r\n  }\r\n  const navigate = useNavigate();\r\n  const handleMySubmissionsClick = () => {\r\n    navigate(\"/MySubmissions\");\r\n  };\r\n\r\n  const columns: TableColumn<ReconstructedDataRow>[] = [\r\n    {\r\n      name: \"id\",\r\n      selector: (row) => row.id.toString(),\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: \"StudentNumber\",\r\n      selector: (row) => row.studentNumber.toString(),\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: \"Title\",\r\n      selector: (row) => row.title.toString(),\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: \"First Name\",\r\n      selector: (row) => row.firstName.toString()\r\n    }\r\n  ];\r\n\r\n  const [records, setRecords] = useState<ReconstructedDataRow[]>([]);\r\n\r\n  useEffect(() => {\r\n    SubmissionService.getUserSubmissions()\r\n      .then((data) => {\r\n        const reconstructedData: ReconstructedDataRow[] = data.map((row) => ({\r\n          id: row.id,\r\n          studentNumber: row.studentNumber,\r\n          title: row.title,\r\n        }));\r\n\r\n        setRecords(reconstructedData);\r\n      })\r\n      .catch((error) => console.error(\"Error fetching submissions:\", error));\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <DataTable\r\n          columns={columns}\r\n          data={records}\r\n          selectableRows\r\n          fixedHeader\r\n          pagination\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SubmissionList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AASlD,SAAeC,WAAW,QAAQ,kBAAkB;AAEpD,OAAOC,SAAS,MAAuB,4BAA4B;AAGnE,SAASC,iBAAiB,QAAQ,uCAAuC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAc1E,MAAMC,cAAwB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAMa,OAAO,GAAGA,CAAA,KAAM;IACpBD,SAAS,CAAC,IAAI,CAAC;EACjB,CAAC;EAED,SAASE,cAAcA,CAAA,EAAG;IACxB,MAAMC,GAAG,GAAGC,MAAM,CAACC,IAAI,CAAC,qBAAqB,EAAE,QAAQ,CAAC;EAC1D;EACA,MAAMC,QAAQ,GAAGhB,WAAW,CAAC,CAAC;EAC9B,MAAMiB,wBAAwB,GAAGA,CAAA,KAAM;IACrCD,QAAQ,CAAC,gBAAgB,CAAC;EAC5B,CAAC;EAED,MAAME,OAA4C,GAAG,CACnD;IACEC,IAAI,EAAE,IAAI;IACVC,QAAQ,EAAGC,GAAG,IAAKA,GAAG,CAACC,EAAE,CAACC,QAAQ,CAAC,CAAC;IACpCC,QAAQ,EAAE;EACZ,CAAC,EACD;IACEL,IAAI,EAAE,eAAe;IACrBC,QAAQ,EAAGC,GAAG,IAAKA,GAAG,CAACI,aAAa,CAACF,QAAQ,CAAC,CAAC;IAC/CC,QAAQ,EAAE;EACZ,CAAC,EACD;IACEL,IAAI,EAAE,OAAO;IACbC,QAAQ,EAAGC,GAAG,IAAKA,GAAG,CAACK,KAAK,CAACH,QAAQ,CAAC,CAAC;IACvCC,QAAQ,EAAE;EACZ,CAAC,EACD;IACEL,IAAI,EAAE,YAAY;IAClBC,QAAQ,EAAGC,GAAG,IAAKA,GAAG,CAACM,SAAS,CAACJ,QAAQ,CAAC;EAC5C,CAAC,CACF;EAED,MAAM,CAACK,OAAO,EAAEC,UAAU,CAAC,GAAG/B,QAAQ,CAAyB,EAAE,CAAC;EAElEC,SAAS,CAAC,MAAM;IACdG,iBAAiB,CAAC4B,kBAAkB,CAAC,CAAC,CACnCC,IAAI,CAAEC,IAAI,IAAK;MACd,MAAMC,iBAAyC,GAAGD,IAAI,CAACE,GAAG,CAAEb,GAAG,KAAM;QACnEC,EAAE,EAAED,GAAG,CAACC,EAAE;QACVG,aAAa,EAAEJ,GAAG,CAACI,aAAa;QAChCC,KAAK,EAAEL,GAAG,CAACK;MACb,CAAC,CAAC,CAAC;MAEHG,UAAU,CAACI,iBAAiB,CAAC;IAC/B,CAAC,CAAC,CACDE,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC,CAAC;EAC1E,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEhC,OAAA,CAAAE,SAAA;IAAAgC,QAAA,eACElC,OAAA;MAAAkC,QAAA,eACElC,OAAA,CAACH,SAAS;QACRiB,OAAO,EAAEA,OAAQ;QACjBc,IAAI,EAAEJ,OAAQ;QACdW,cAAc;QACdC,WAAW;QACXC,UAAU;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACX;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC,gBACN,CAAC;AAEP,CAAC;AAACrC,EAAA,CAjEID,cAAwB;EAAA,QASXP,WAAW;AAAA;AAAA8C,EAAA,GATxBvC,cAAwB;AAmE9B,eAAeA,cAAc;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}