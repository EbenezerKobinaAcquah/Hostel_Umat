{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ebene\\\\Downloads\\\\umat_tsap_application-v1.0.2\\\\src\\\\Routes.jsx\";\n// import React from \"react\";\n// import { BrowserRouter as Router, Routes, Route, Navigate } from \"react-router-dom\";\n// import NotFound from \"pages/NotFound\";\n// import MySubmissions from \"pages/MySubmissions\";\n// const FrameOne = React.lazy(() => import(\"pages/FrameOne\"));\n\n// const ProjectRoutes = () => {\n//   return (\n//     <React.Suspense fallback={<>Loading...</>}>\n//       <Router>\n//         <Routes>\n//           <Route path=\"/\" element={<Navigate to=\"/frameone\" />} />\n//           <Route path=\"/frameone\" element={<FrameOne />} />\n//           <Route path=\"*\" element={<NotFound />} />\n//         </Routes>\n//       </Router>\n//     </React.Suspense>\n//   );\n// };\n\n// export default ProjectRoutes;\n\n// import React from \"react\";\n// import {\n//   BrowserRouter as Router,\n//   Routes,\n//   Route,\n// } from \"react-router-dom\";\n// import NotFound from \"pages/NotFound\";\n// import FrameOne from \"pages/FrameOne\";\n// import MySubmissions from \"pages/MySubmissions\";\n// import ReportsPage from \"pages/Reports\";\n// import Login from \"pages/Login/Login\";\n// import AuthGuard from \"pages/AuthGuard/AuthGuard\";\n\n// const ProjectRoutes = () => {\n//   return (\n//     <React.Suspense fallback={<>Loading...</>}>\n//       <Router>\n//         <Routes>\n//           <Route path=\"/Frameone\" element={<AuthGuard><FrameOne /></AuthGuard>} />\n//           <Route path=\"/MySubmissions\" element={<AuthGuard><MySubmissions /></AuthGuard>} />\n//           <Route path=\"/Reports\" element={<AuthGuard><ReportsPage /></AuthGuard>} />\n/*#__PURE__*/_jsxDEV(Route, {\n  path: \"/Login\",\n  element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 41\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 44,\n  columnNumber: 11\n}, this);\n//           <Route path=\"*\" element={<NotFound />} />\n//         </Routes>\n//       </Router>\n//     </React.Suspense>\n//   );\n// };\n\n// export default ProjectRoutes;\n\nimport React from \"react\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport NotFound from \"pages/NotFound\";\nimport FrameOne from \"pages/FrameOne\";\nimport MySubmissions from \"pages/MySubmissions\";\nimport ReportsPage from \"pages/Reports\";\nimport Login from \"pages/Login/Login\";\nimport AuthGuard from \"pages/AuthGuard/AuthGuard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ProjectRoutes = () => {\n  const isAuthenticated = localStorage.getItem(\"userData\"); // Get the authentication state from your application\n  return /*#__PURE__*/_jsxDEV(React.Suspense, {\n    fallback: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: \"Loading...\"\n    }, void 0, false),\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/Frameone\",\n          element: /*#__PURE__*/_jsxDEV(AuthGuard, {\n            isAuthenticated: isAuthenticated,\n            children: /*#__PURE__*/_jsxDEV(FrameOne, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 57\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 12\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/MySubmissions\",\n          element: /*#__PURE__*/_jsxDEV(AuthGuard, {\n            isAuthenticated: isAuthenticated,\n            children: /*#__PURE__*/_jsxDEV(MySubmissions, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 57\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 12\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/Reports\",\n          element: /*#__PURE__*/_jsxDEV(AuthGuard, {\n            isAuthenticated: isAuthenticated,\n            children: /*#__PURE__*/_jsxDEV(ReportsPage, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 57\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 12\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_c = ProjectRoutes;\nexport default ProjectRoutes;\nvar _c;\n$RefreshReg$(_c, \"ProjectRoutes\");","map":{"version":3,"names":["_jsxDEV","Route","path","element","Login","fileName","_jsxFileName","lineNumber","columnNumber","React","BrowserRouter","Router","Routes","NotFound","FrameOne","MySubmissions","ReportsPage","AuthGuard","jsxDEV","Fragment","_Fragment","ProjectRoutes","isAuthenticated","localStorage","getItem","Suspense","fallback","children","_c","$RefreshReg$"],"sources":["C:/Users/ebene/Downloads/umat_tsap_application-v1.0.2/src/Routes.jsx"],"sourcesContent":["// import React from \"react\";\n// import { BrowserRouter as Router, Routes, Route, Navigate } from \"react-router-dom\";\n// import NotFound from \"pages/NotFound\";\n// import MySubmissions from \"pages/MySubmissions\";\n// const FrameOne = React.lazy(() => import(\"pages/FrameOne\"));\n\n// const ProjectRoutes = () => {\n//   return (\n//     <React.Suspense fallback={<>Loading...</>}>\n//       <Router>\n//         <Routes>\n//           <Route path=\"/\" element={<Navigate to=\"/frameone\" />} />\n//           <Route path=\"/frameone\" element={<FrameOne />} />\n//           <Route path=\"*\" element={<NotFound />} />\n//         </Routes>\n//       </Router>\n//     </React.Suspense>\n//   );\n// };\n\n// export default ProjectRoutes;\n\n// import React from \"react\";\n// import {\n//   BrowserRouter as Router,\n//   Routes,\n//   Route,\n// } from \"react-router-dom\";\n// import NotFound from \"pages/NotFound\";\n// import FrameOne from \"pages/FrameOne\";\n// import MySubmissions from \"pages/MySubmissions\";\n// import ReportsPage from \"pages/Reports\";\n// import Login from \"pages/Login/Login\";\n// import AuthGuard from \"pages/AuthGuard/AuthGuard\";\n\n// const ProjectRoutes = () => {\n//   return (\n//     <React.Suspense fallback={<>Loading...</>}>\n//       <Router>\n//         <Routes>\n//           <Route path=\"/Frameone\" element={<AuthGuard><FrameOne /></AuthGuard>} />\n//           <Route path=\"/MySubmissions\" element={<AuthGuard><MySubmissions /></AuthGuard>} />\n//           <Route path=\"/Reports\" element={<AuthGuard><ReportsPage /></AuthGuard>} />\n          <Route path=\"/Login\" element={<Login />} />\n//           <Route path=\"*\" element={<NotFound />} />\n//         </Routes>\n//       </Router>\n//     </React.Suspense>\n//   );\n// };\n\n// export default ProjectRoutes;\n\n\n\nimport React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n} from \"react-router-dom\";\nimport NotFound from \"pages/NotFound\";\nimport FrameOne from \"pages/FrameOne\";\nimport MySubmissions from \"pages/MySubmissions\";\nimport ReportsPage from \"pages/Reports\";\nimport Login from \"pages/Login/Login\";\nimport AuthGuard from \"pages/AuthGuard/AuthGuard\";\n\nconst ProjectRoutes = () => {\n  const isAuthenticated = localStorage.getItem(\"userData\"); // Get the authentication state from your application\n  return (\n    <React.Suspense fallback={<>Loading...</>}>\n      <Router>\n        <Routes>\n    \n\n<Route\n  path=\"/Frameone\"\n  element={<AuthGuard isAuthenticated={isAuthenticated}><FrameOne /></AuthGuard>}\n/>\n<Route\n  path=\"/MySubmissions\"\n  element={<AuthGuard isAuthenticated={isAuthenticated}><MySubmissions /></AuthGuard>}\n/>\n<Route\n  path=\"/Reports\"\n  element={<AuthGuard isAuthenticated={isAuthenticated}><ReportsPage /></AuthGuard>}\n/>\n        </Routes>\n      </Router>\n    </React.Suspense>\n  );\n};\n\nexport default ProjectRoutes;\n\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}