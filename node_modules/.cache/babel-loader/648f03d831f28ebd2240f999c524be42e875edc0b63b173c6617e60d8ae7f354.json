{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ebene\\\\Downloads\\\\umat_tsap_application-v1.0.2\\\\src\\\\pages\\\\MySubmissions\\\\index.tsx\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n\n// import { Menu, MenuItem } from \"react-pro-sidebar\";\n\n// import { Button, Img, Line, Text } from \"components\";\n// import Sidebar1 from \"components/Sidebar1\";\n// import StudentProfile from \"components/StudentProfile\";\n// import SidebarOverlay from \"components/SidebarOverlay\";\n// import Footer from \"components/Footer\";\n// import { Link, useNavigate } from \"react-router-dom\";\n// import DataTable from \"react-data-table-component\";\n\n// import { Submission } from \"components/Models/submissions\";\n// import { SubmissionService } from 'components/Services/SubmissionService';\n\n// const FrameOnePage = () => {\n\n//   const [isOpen, setIsOpen] = useState(false);\n//   const openNav = () => {\n//     setIsOpen(true);\n//   };\n\n//   const columns = [\n//     {\n//       name: 'id',\n//       selector: 'id',\n//       sortable: true,\n//     },\n//     {\n//       name: 'studentNumber',\n//       selector: 'studentNumber',\n//       sortable: true,\n//     },\n//     {\n//       name: \"title\",\n//       selector: 'title',\n//       sortable: true,\n//     }\n//   ];\n\n//   const data = [\n//       {\n//       id: 1,\n//       name: 'Beetlejuice',\n//       email: 'ebenezer@gmail.com',\n//       age: 23\n//     },\n//     {\n//       id: 2,\n//       name: 'Ghostbusters',\n//       email: 'eben@gmail.com',\n//       age: 24\n//     },\n//     {\n//       id: 3,\n//       name: 'Kobina',\n//       email: 'kobina@gmail.com',\n//       age: 24\n//     },\n//     {\n//       id: 4,\n//       name: 'Acquah',\n//       email: 'acquah@gamil.com',\n//       age: 24\n//     },\n//     {\n//       id: 1,\n//       name: 'Beetlejuice',\n//       email: 'ebenezer@gmail.com',\n//       age: 23\n//     },\n//     {\n//       id: 2,\n//       name: 'Ghostbusters',\n//       email: 'eben@gmail.com',\n//       age: 24\n//     },\n//     {\n//       id: 3,\n//       name: 'Kobina',\n//       email: 'kobina@gmail.com',\n//       age: 24\n//     },\n//     {\n//       id: 4,\n//       name: 'Acquah',\n//       email: 'acquah@gamil.com',\n//       age: 24\n//     },\n//     {\n//       id: 1,\n//       name: 'Beetlejuice',\n//       email: 'ebenezer@gmail.com',\n//       age: 23\n//     },\n//     {\n//       id: 2,\n//       name: 'Ghostbusters',\n//       email: 'eben@gmail.com',\n//       age: 24\n//     },\n//     {\n//       id: 3,\n//       name: 'Kobina',\n//       email: 'kobina@gmail.com',\n//       age: 24\n//     },\n//     {\n//       id: 4,\n//       name: 'Acquah',\n//       email: 'acquah@gamil.com',\n//       age: 24\n//     },\n//   ]\n//   const [records, setRecords] = useState(data);\n// function handleFilter(event){\n//   const newData = data.filter(row => {\n//     return row.name.toLowerCase().includes(event.target.value.toLowerCase())\n//   });\n//   setRecords(newData)\n// }\n//   return (\n\n//       <div className=\"\">\n//       <div className=\"flex md:flex-col-3  h-[100%]  font-inika my-auto  w-full\">\n//         <div className=\"md:relative md:col-span-1 \">\n//           <Sidebar1\n//             openNav={openNav}\n//             className=\"h-full bg-teal-900 flex justify-start left-[0] top-[0]\"\n//           />\n//         </div>\n//         <div className=\"  md:col-span-2 relative bg-gray-100 items-center justify-start md:ml-[0] w-full\">\n//         <div className=\"\">\n//           <div className=\"md:mb-[7%]  mb-[17%]\">\n//             <StudentProfile />\n//           </div>\n\n//           <div className=\"md:pt-[5%] md:mb-[5%] md:pl-[10%] md:pr-[10%]\">\n//           <div className=\"bg-white-A700 shadow-md\">\n//           <div  className=\"text-right mr-5 \"><input type=\"text\" className=\"mt-5\" onChange={handleFilter} /></div>\n\n//           <DataTable\n// \t\t\tcolumns={columns}\n\n// \t\t\tdata={records}\n//       selectableRows\n//       fixedHeader\n//       pagination\n\n// \t\t/>\n\n//           </div>\n// </div>\n//           </div>\n\n//         </div>\n//       </div>\n//       <div className=\"\">\n//       <Footer />\n//       </div>\n//       </div>\n\n//   );\n// };\n\n// export default FrameOnePage;\n\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport DataTable from \"react-data-table-component\";\nimport { SubmissionService } from 'components/Services/SubmissionService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst [isOpen, setIsOpen] = useState(false);\nconst openNav = () => {\n  setIsOpen(true);\n};\nconst columns = [{\n  name: 'id',\n  selector: 'id',\n  sortable: true\n}, {\n  name: 'studentNumber',\n  selector: 'studentNumber',\n  sortable: true\n}, {\n  name: \"title\",\n  selector: 'title',\n  sortable: true\n}];\nconst SubmissionList = () => {\n  _s();\n  function handleNavigate() {\n    const win = window.open(\"https://umat.edu.gh\", \"_blank\");\n    //win.focus();\n  }\n  const navigate = useNavigate();\n  const handleMySubmissionsClick = () => {\n    // Navigate to the new page when the button is clicked\n    navigate(\"/MySubmissions\");\n  };\n  const columns = [{\n    name: 'id',\n    selector: 'id',\n    sortable: true\n  }, {\n    name: 'studentNumber',\n    selector: 'studentNumber',\n    sortable: true\n  }, {\n    name: \"title\",\n    selector: 'title',\n    sortable: true\n  }];\n\n  //const [submissions, setSubmissions] = useState<Submission[]>([]);\n  const [records, setRecords] = useState([]);\n  useEffect(() => {\n    SubmissionService.getUserSubmissions().then(data => {\n      const reconstructedData = data.map(row => ({\n        id: 1,\n        studentNumber: \"abc\",\n        title: \"abc1\"\n      }));\n      console.log('Response from getUserSubmissions:', data);\n      //setSubmissions(data);\n      setRecords(reconstructedData);\n    }).catch(error => console.error('Error fetching submissions:', error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(DataTable, {\n        columns: columns,\n        data: records,\n        selectableRows: true,\n        fixedHeader: true,\n        pagination: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 16\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 16\n    }, this)\n  }, void 0, false);\n};\n//}\n_s(SubmissionList, \"THyPDrUdIko1PAlFzoO5/nvjuT4=\", false, function () {\n  return [useNavigate];\n});\n_c = SubmissionList;\nexport default SubmissionList;\nvar _c;\n$RefreshReg$(_c, \"SubmissionList\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","DataTable","SubmissionService","jsxDEV","_jsxDEV","Fragment","_Fragment","isOpen","setIsOpen","openNav","columns","name","selector","sortable","SubmissionList","_s","handleNavigate","win","window","open","navigate","handleMySubmissionsClick","records","setRecords","getUserSubmissions","then","data","reconstructedData","map","row","id","studentNumber","title","console","log","catch","error","children","selectableRows","fixedHeader","pagination","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ebene/Downloads/umat_tsap_application-v1.0.2/src/pages/MySubmissions/index.tsx"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n\r\n// import { Menu, MenuItem } from \"react-pro-sidebar\";\r\n\r\n// import { Button, Img, Line, Text } from \"components\";\r\n// import Sidebar1 from \"components/Sidebar1\";\r\n// import StudentProfile from \"components/StudentProfile\";\r\n// import SidebarOverlay from \"components/SidebarOverlay\";\r\n// import Footer from \"components/Footer\";\r\n// import { Link, useNavigate } from \"react-router-dom\";\r\n// import DataTable from \"react-data-table-component\";\r\n\r\n\r\n// import { Submission } from \"components/Models/submissions\";\r\n// import { SubmissionService } from 'components/Services/SubmissionService';\r\n\r\n\r\n// const FrameOnePage = () => {\r\n  \r\n//   const [isOpen, setIsOpen] = useState(false);\r\n//   const openNav = () => {\r\n//     setIsOpen(true);\r\n//   };\r\n\r\n\r\n\r\n//   const columns = [\r\n//     {\r\n//       name: 'id',\r\n//       selector: 'id',\r\n//       sortable: true,\r\n//     },\r\n//     {\r\n//       name: 'studentNumber',\r\n//       selector: 'studentNumber',\r\n//       sortable: true,\r\n//     },\r\n//     {\r\n//       name: \"title\",\r\n//       selector: 'title',\r\n//       sortable: true,\r\n//     }\r\n//   ];\r\n\r\n\r\n  \r\n//   const data = [\r\n//       {\r\n//       id: 1,\r\n//       name: 'Beetlejuice',\r\n//       email: 'ebenezer@gmail.com',\r\n//       age: 23\r\n//     },\r\n//     {\r\n//       id: 2,\r\n//       name: 'Ghostbusters',\r\n//       email: 'eben@gmail.com',\r\n//       age: 24\r\n//     },\r\n//     {\r\n//       id: 3,\r\n//       name: 'Kobina',\r\n//       email: 'kobina@gmail.com',\r\n//       age: 24\r\n//     },\r\n//     {\r\n//       id: 4,\r\n//       name: 'Acquah',\r\n//       email: 'acquah@gamil.com',\r\n//       age: 24\r\n//     },\r\n//     {\r\n//       id: 1,\r\n//       name: 'Beetlejuice',\r\n//       email: 'ebenezer@gmail.com',\r\n//       age: 23\r\n//     },\r\n//     {\r\n//       id: 2,\r\n//       name: 'Ghostbusters',\r\n//       email: 'eben@gmail.com',\r\n//       age: 24\r\n//     },\r\n//     {\r\n//       id: 3,\r\n//       name: 'Kobina',\r\n//       email: 'kobina@gmail.com',\r\n//       age: 24\r\n//     },\r\n//     {\r\n//       id: 4,\r\n//       name: 'Acquah',\r\n//       email: 'acquah@gamil.com',\r\n//       age: 24\r\n//     },\r\n//     {\r\n//       id: 1,\r\n//       name: 'Beetlejuice',\r\n//       email: 'ebenezer@gmail.com',\r\n//       age: 23\r\n//     },\r\n//     {\r\n//       id: 2,\r\n//       name: 'Ghostbusters',\r\n//       email: 'eben@gmail.com',\r\n//       age: 24\r\n//     },\r\n//     {\r\n//       id: 3,\r\n//       name: 'Kobina',\r\n//       email: 'kobina@gmail.com',\r\n//       age: 24\r\n//     },\r\n//     {\r\n//       id: 4,\r\n//       name: 'Acquah',\r\n//       email: 'acquah@gamil.com',\r\n//       age: 24\r\n//     },\r\n//   ]\r\n//   const [records, setRecords] = useState(data);\r\n// function handleFilter(event){\r\n//   const newData = data.filter(row => {\r\n//     return row.name.toLowerCase().includes(event.target.value.toLowerCase())\r\n//   });\r\n//   setRecords(newData)\r\n// }\r\n//   return (\r\n    \r\n//       <div className=\"\">\r\n//       <div className=\"flex md:flex-col-3  h-[100%]  font-inika my-auto  w-full\">\r\n//         <div className=\"md:relative md:col-span-1 \">\r\n//           <Sidebar1\r\n//             openNav={openNav}\r\n//             className=\"h-full bg-teal-900 flex justify-start left-[0] top-[0]\"\r\n//           />\r\n//         </div>\r\n//         <div className=\"  md:col-span-2 relative bg-gray-100 items-center justify-start md:ml-[0] w-full\">\r\n//         <div className=\"\">\r\n//           <div className=\"md:mb-[7%]  mb-[17%]\">\r\n//             <StudentProfile />\r\n//           </div>\r\n          \r\n//           <div className=\"md:pt-[5%] md:mb-[5%] md:pl-[10%] md:pr-[10%]\">\r\n//           <div className=\"bg-white-A700 shadow-md\">\r\n//           <div  className=\"text-right mr-5 \"><input type=\"text\" className=\"mt-5\" onChange={handleFilter} /></div>\r\n         \r\n//           <DataTable\r\n// \t\t\tcolumns={columns}\r\n      \r\n// \t\t\tdata={records}\r\n//       selectableRows\r\n//       fixedHeader\r\n//       pagination\r\n\r\n// \t\t/>\r\n    \r\n//           </div>\r\n// </div>\r\n//           </div>\r\n         \r\n//         </div>\r\n//       </div>\r\n//       <div className=\"\">\r\n//       <Footer />\r\n//       </div>\r\n//       </div>\r\n    \r\n//   );\r\n// };\r\n\r\n// export default FrameOnePage;\r\n\r\n\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\n\r\nimport { Menu, MenuItem } from \"react-pro-sidebar\";\r\n\r\nimport { Button, Img, Line, Text } from \"components\";\r\nimport Sidebar1 from \"components/Sidebar1\";\r\nimport StudentProfile from \"components/StudentProfile\";\r\nimport SidebarOverlay from \"components/SidebarOverlay\";\r\nimport Footer from \"components/Footer\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport DataTable from \"react-data-table-component\";\r\n\r\n\r\nimport { Submission } from \"components/Models/submissions\";\r\nimport { SubmissionService } from 'components/Services/SubmissionService';\r\n\r\n\r\n\r\n\r\n\r\nconst [isOpen, setIsOpen] = useState(false);\r\nconst openNav = () => {\r\n  setIsOpen(true);\r\n};\r\n\r\n\r\n\r\nconst columns = [\r\n  {\r\n    name: 'id',\r\n    selector: 'id',\r\n    sortable: true,\r\n  },\r\n  {\r\n    name: 'studentNumber',\r\n    selector: 'studentNumber',\r\n    sortable: true,\r\n  },\r\n  {\r\n    name: \"title\",\r\n    selector: 'title',\r\n    sortable: true,\r\n  }\r\n];\r\n\r\n\r\ninterface ReconstructedDataRow {\r\n  id: number;\r\n  studentNumber: string;\r\n  title: string;\r\n}\r\n\r\n\r\nconst SubmissionList: React.FC = () => {\r\n\r\n\r\n  function handleNavigate() {\r\n    const win = window.open(\"https://umat.edu.gh\", \"_blank\");\r\n    //win.focus();\r\n  }\r\n  const navigate = useNavigate();\r\n  const handleMySubmissionsClick = () => {\r\n    // Navigate to the new page when the button is clicked\r\n    navigate(\"/MySubmissions\");\r\n  };\r\n\r\n\r\n \r\n\r\n\r\n  const columns = [\r\n    {\r\n      name: 'id',\r\n      selector: 'id',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'studentNumber',\r\n      selector: 'studentNumber',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: \"title\",\r\n      selector: 'title',\r\n      sortable: true,\r\n    }\r\n  ];\r\n\r\n\r\n\r\n\r\n\r\n  //const [submissions, setSubmissions] = useState<Submission[]>([]);\r\n  const [records, setRecords] = useState<ReconstructedDataRow[]>([]);\r\n\r\n  useEffect(() => {\r\n      SubmissionService.getUserSubmissions()\r\n      .then((data) => {\r\n        const reconstructedData: ReconstructedDataRow[] = data.map(row => ({\r\n          id: 1,\r\n          studentNumber: \"abc\",\r\n          title: \"abc1\"\r\n\r\n        }));\r\n          console.log('Response from getUserSubmissions:', data);\r\n          //setSubmissions(data);\r\n          setRecords(reconstructedData)\r\n          \r\n      })\r\n          .catch((error) => console.error('Error fetching submissions:', error));\r\n  }, []);\r\n\r\n  return (\r\n      <>\r\n               <div>\r\n               <DataTable\r\n\t\t\tcolumns={columns}\r\n      \r\n\t\t\tdata={records}\r\n      selectableRows\r\n      fixedHeader\r\n      pagination\r\n\r\n\t\t/>\r\n      </div>\r\n\r\n      </>\r\n      \r\n  );\r\n};\r\n//}\r\n\r\n\r\nexport default SubmissionList;\r\n\r\n\r\n\r\n"],"mappings":";;AAAA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;;AAGA;;AAEA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAIA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AASlD,SAAeC,WAAW,QAAQ,kBAAkB;AACpD,OAAOC,SAAS,MAAM,4BAA4B;AAIlD,SAASC,iBAAiB,QAAQ,uCAAuC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAM1E,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;AAC3C,MAAMW,OAAO,GAAGA,CAAA,KAAM;EACpBD,SAAS,CAAC,IAAI,CAAC;AACjB,CAAC;AAID,MAAME,OAAO,GAAG,CACd;EACEC,IAAI,EAAE,IAAI;EACVC,QAAQ,EAAE,IAAI;EACdC,QAAQ,EAAE;AACZ,CAAC,EACD;EACEF,IAAI,EAAE,eAAe;EACrBC,QAAQ,EAAE,eAAe;EACzBC,QAAQ,EAAE;AACZ,CAAC,EACD;EACEF,IAAI,EAAE,OAAO;EACbC,QAAQ,EAAE,OAAO;EACjBC,QAAQ,EAAE;AACZ,CAAC,CACF;AAUD,MAAMC,cAAwB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAGrC,SAASC,cAAcA,CAAA,EAAG;IACxB,MAAMC,GAAG,GAAGC,MAAM,CAACC,IAAI,CAAC,qBAAqB,EAAE,QAAQ,CAAC;IACxD;EACF;EACA,MAAMC,QAAQ,GAAGpB,WAAW,CAAC,CAAC;EAC9B,MAAMqB,wBAAwB,GAAGA,CAAA,KAAM;IACrC;IACAD,QAAQ,CAAC,gBAAgB,CAAC;EAC5B,CAAC;EAMD,MAAMV,OAAO,GAAG,CACd;IACEC,IAAI,EAAE,IAAI;IACVC,QAAQ,EAAE,IAAI;IACdC,QAAQ,EAAE;EACZ,CAAC,EACD;IACEF,IAAI,EAAE,eAAe;IACrBC,QAAQ,EAAE,eAAe;IACzBC,QAAQ,EAAE;EACZ,CAAC,EACD;IACEF,IAAI,EAAE,OAAO;IACbC,QAAQ,EAAE,OAAO;IACjBC,QAAQ,EAAE;EACZ,CAAC,CACF;;EAMD;EACA,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGzB,QAAQ,CAAyB,EAAE,CAAC;EAElEC,SAAS,CAAC,MAAM;IACZG,iBAAiB,CAACsB,kBAAkB,CAAC,CAAC,CACrCC,IAAI,CAAEC,IAAI,IAAK;MACd,MAAMC,iBAAyC,GAAGD,IAAI,CAACE,GAAG,CAACC,GAAG,KAAK;QACjEC,EAAE,EAAE,CAAC;QACLC,aAAa,EAAE,KAAK;QACpBC,KAAK,EAAE;MAET,CAAC,CAAC,CAAC;MACDC,OAAO,CAACC,GAAG,CAAC,mCAAmC,EAAER,IAAI,CAAC;MACtD;MACAH,UAAU,CAACI,iBAAiB,CAAC;IAEjC,CAAC,CAAC,CACGQ,KAAK,CAAEC,KAAK,IAAKH,OAAO,CAACG,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC,CAAC;EAC9E,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIhC,OAAA,CAAAE,SAAA;IAAA+B,QAAA,eACSjC,OAAA;MAAAiC,QAAA,eACAjC,OAAA,CAACH,SAAS;QACtBS,OAAO,EAAEA,OAAQ;QAEjBgB,IAAI,EAAEJ,OAAQ;QACXgB,cAAc;QACdC,WAAW;QACXC,UAAU;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEb;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACO;EAAC,gBAEJ,CAAC;AAGT,CAAC;AACD;AAAA7B,EAAA,CA7EMD,cAAwB;EAAA,QAOXd,WAAW;AAAA;AAAA6C,EAAA,GAPxB/B,cAAwB;AAgF9B,eAAeA,cAAc;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}