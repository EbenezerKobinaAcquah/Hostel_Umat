{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ebene\\\\Downloads\\\\umat_tsap_application-v1.0.2\\\\src\\\\components\\\\Sidebar1\\\\index.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import { Menu, MenuItem, Sidebar, useProSidebar } from \"react-pro-sidebar\";\n// import { Img, Text } from \"components\";\n// import sidebarOverlay from \"components/togglesidebar\";\n\n// const Sidebar1 = (props) => {\n//   const { collapseSidebar, collapsed } = useProSidebar();\n//   const [isMobile, setIsMobile] = useState(false);\n//       const logoElements = document.querySelectorAll(\".umat-logo\");\n//       if (logoElements) {\n//         logoElements.forEach((element) => {\n//           element.classList.toggle(\"hidden\", collapsed);\n//         });\n//       }\n\n//   useEffect(() => {\n//     // Function to handle viewport resizing\n//     const handleResize = () => {\n//       setIsMobile(window.innerWidth <= 576); // Check if viewport is smaller than or equal to \"sm\"\n//     };\n\n//     // Add event listener for window resize\n//     window.addEventListener(\"resize\", handleResize);\n\n//     // Call handleResize to set initial state\n//     handleResize();\n\n//     // Clean up event listener on component unmount\n//     return () => {\n//       window.removeEventListener(\"resize\", handleResize);\n//     };\n//   }, []);\n\n//   if (isMobile) {\n//     // If viewport is smaller than or equal to \"sm\", hide the sidebar completely\n//     return <div className=\"w-20 h-20 text-center bg-gray-100\">\n//     <button className=\"cursor-pointer \" /*onClick={()}*/>\n//     <Img\n//     className=\"cursor-pointer ml-[20%] mt-5 h-10 w-10\"\n//     src=\"images/menu-burger-new.png\"\n//     alt=\"menu-icon\"\n//     />\n//     </button>\n//     </div>;\n//   }\n\n//   // // if (isMobile && )\n\n//   return (\n//     <>\n//       <div className=\"above-all left-[0] h-full\">\n//         <Sidebar\n//           onClick={() => collapseSidebar(!collapsed)}\n//           className={`umat-logo ${props.className}`}\n//         >\n//           <div className=\"\">\n//             <Img\n//               className=\"cursor-pointer umat-logo md:h-auto mt-[5%] ml-[85%] object-cover w-[29px] \"\n//               src=\"images/left-arrow.png\"\n//               alt=\"lessthan\"\n//             />\n//             <Menu\n//               menuItemStyles={{\n//                 button: {\n//                   padding: \"0 5%\",\n//                   gap: \"12px\",\n//                   margin: \"0 0 10%\",\n//                   color: \"#ffffff\",\n//                   fontWeight: 700,\n//                   fontSize: \"30px\",\n//                   fontFamily: \"Inika\",\n//                 },\n//               }}\n//               className=\"umat-logo flex items-center justify-start mt-[10%] w-full\"\n//             >\n//               <MenuItem\n//                 icon={\n//                   <Img\n//                     className=\"umat-logo common-pointer h-[20px] md:h-[29px] inset-auto object-cover relative w-full\"\n//                     src=\"images/img_umatlogo1.png\"\n//                     alt=\"umatlogoOne\"\n//                     onClick={props?.onClick}\n//                   />\n//                 }\n//               >\n//                 <Text className=\"umat-logo text-[25px] text-shadow-ts\">\n//                   UMaT - TSAP\n//                 </Text>\n//               </MenuItem>\n//             </Menu>\n\n//             <div className=\"pb-[10%] flex justify-center\">\n//               <div>\n//                 <div className=\"\">\n//                   {collapsed && (\n//                     <div className=\"\">\n//                       {/* Render the menu icon only when the sidebar is collapsed */}\n//                       <Img\n//                         className=\"cursor-pointer mb-[50%] h-10 w-10\"\n//                         src=\"images/menu-burger-new.png\"\n//                         alt=\"menu-icon\"\n//                       />\n//                     </div>\n//                   )}\n//                 </div>\n\n//                 <Img\n//                   className=\"mb-[50%] h-10 w-10\"\n//                   src=\"images/img_home.svg\"\n//                   alt=\"home\"\n//                 />\n//                 <Img\n//                   className=\"mb-[50%] h-10 w-10\"\n//                   src=\"images/img_thumbsup.svg\"\n//                   alt=\"thumbsup\"\n//                 />\n//                 <Img\n//                   className=\"mb-[50%] h-10 w-10\"\n//                   src=\"images/img_student.svg\"\n//                   alt=\"student_One\"\n//                 />\n//                 <Img\n//                   className=\"mb-[50%] h-10 w-10\"\n//                   src=\"images/img_thumbsup_blue_gray_200.svg\"\n//                   alt=\"thumbsup_One\"\n//                 />\n//                 <Img\n//                   className=\"mb-[50%] h-10 w-10\"\n//                   src=\"images/img_finance.svg\"\n//                   alt=\"finance\"\n//                 />\n//                 <Img\n//                   className=\"mb-[50%] h-10 w-10\"\n//                   src=\"images/img_calendar.svg\"\n//                   alt=\"calendar\"\n//                 />\n//               </div>\n\n//               <div className=\"umat-logo pl-[10%] \">\n//                 <Text\n//                   className=\"h-10 pt-[8%] mb-[12%] flex text-lg text-white-A700\"\n//                   size=\"txtPoppinsMedium18\"\n//                 >\n//                   Home\n//                 </Text>\n//                 <Text\n//                   className=\"h-10 pt-[8%] mb-[12%] text-lg text-white-A700\"\n//                   size=\"txtPoppinsMedium18\"\n//                 >\n//                   Submissions\n//                 </Text>\n//                 <Text\n//                   className=\"h-10 pt-[8%] mb-[12%] text-lg text-white-A700\"\n//                   size=\"txtPoppinsMedium18\"\n//                 >\n//                   Report\n//                 </Text>\n//                 <Text\n//                   className=\"h-10 pt-[8%] mb-[12%] text-lg text-white-A700\"\n//                   size=\"txtPoppinsMedium18\"\n//                 >\n//                   Event\n//                 </Text>\n//                 <Text\n//                   className=\"h-10 pt-[8%] mb-[12%] text-lg text-white-A700\"\n//                   size=\"txtPoppinsMedium18\"\n//                 >\n//                   Assignments\n//                 </Text>\n//                 <Text\n//                   className=\"h-10 pt-[8%] text-lg text-white-A700\"\n//                   size=\"txtPoppinsMedium18\"\n//                 >\n//                   Announcements\n//                 </Text>\n//               </div>\n//             </div>\n//           </div>\n//         </Sidebar>\n//       </div>\n//     </>\n//   );\n// };\n\n// export default Sidebar1;\n\nimport React, { useState, useEffect } from \"react\";\nimport { Menu, MenuItem, Sidebar, useProSidebar } from \"react-pro-sidebar\";\nimport { Img, Text } from \"components\";\nimport sidebarOverlay from \"components/togglesidebar\"; // Import your component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Sidebar1 = props => {\n  _s();\n  const {\n    collapseSidebar,\n    collapsed\n  } = useProSidebar();\n  const [isMobile, setIsMobile] = useState(false);\n  const [showComponent, setShowComponent] = useState(false); // State to control component rendering\n\n  const handleClick = () => {\n    // Toggle the state to show/hide the component\n    setShowComponent(!showComponent);\n  };\n  useEffect(() => {\n    // Function to handle viewport resizing\n    const handleResize = () => {\n      setIsMobile(window.innerWidth <= 576); // Check if viewport is smaller than or equal to \"sm\"\n    };\n\n    // Add event listener for window resize\n    window.addEventListener(\"resize\", handleResize);\n\n    // Call handleResize to set initial state\n    handleResize();\n\n    // Clean up event listener on component unmount\n    return () => {\n      window.removeEventListener(\"resize\", handleResize);\n    };\n  }, []);\n  if (isMobile) {\n    // If viewport is smaller than or equal to \"sm\", hide the sidebar completely\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"position text-center bg-gray-100\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"cursor-pointer\",\n        onClick: handleClick,\n        children: /*#__PURE__*/_jsxDEV(Img, {\n          className: \"cursor-pointer ml-[20%] mt-5 h-10 w-10\",\n          src: \"images/menu-burger-new.png\",\n          alt: \"menu-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this), showComponent && /*#__PURE__*/_jsxDEV(\"sidebarOverlay\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 27\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"left-[0] h-full\",\n      children: /*#__PURE__*/_jsxDEV(Sidebar, {\n        onClick: () => collapseSidebar(!collapsed),\n        className: `umat-logo ${props.className}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(Sidebar1, \"zgTQaUXTsnEhVFx1kGznH2GaQPU=\", false, function () {\n  return [useProSidebar];\n});\n_c = Sidebar1;\nexport default Sidebar1;\nvar _c;\n$RefreshReg$(_c, \"Sidebar1\");","map":{"version":3,"names":["React","useState","useEffect","Menu","MenuItem","Sidebar","useProSidebar","Img","Text","sidebarOverlay","jsxDEV","_jsxDEV","Fragment","_Fragment","Sidebar1","props","_s","collapseSidebar","collapsed","isMobile","setIsMobile","showComponent","setShowComponent","handleClick","handleResize","window","innerWidth","addEventListener","removeEventListener","className","children","onClick","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ebene/Downloads/umat_tsap_application-v1.0.2/src/components/Sidebar1/index.jsx"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\n// import { Menu, MenuItem, Sidebar, useProSidebar } from \"react-pro-sidebar\";\n// import { Img, Text } from \"components\";\n// import sidebarOverlay from \"components/togglesidebar\";\n\n\n// const Sidebar1 = (props) => {\n//   const { collapseSidebar, collapsed } = useProSidebar();\n//   const [isMobile, setIsMobile] = useState(false);\n//       const logoElements = document.querySelectorAll(\".umat-logo\");\n//       if (logoElements) {\n//         logoElements.forEach((element) => {\n//           element.classList.toggle(\"hidden\", collapsed);\n//         });\n//       }\n\n//   useEffect(() => {\n//     // Function to handle viewport resizing\n//     const handleResize = () => {\n//       setIsMobile(window.innerWidth <= 576); // Check if viewport is smaller than or equal to \"sm\"\n//     };\n\n//     // Add event listener for window resize\n//     window.addEventListener(\"resize\", handleResize);\n\n//     // Call handleResize to set initial state\n//     handleResize();\n\n//     // Clean up event listener on component unmount\n//     return () => {\n//       window.removeEventListener(\"resize\", handleResize);\n//     };\n//   }, []);\n\n//   if (isMobile) {\n//     // If viewport is smaller than or equal to \"sm\", hide the sidebar completely\n//     return <div className=\"w-20 h-20 text-center bg-gray-100\">\n//     <button className=\"cursor-pointer \" /*onClick={()}*/>\n//     <Img\n//     className=\"cursor-pointer ml-[20%] mt-5 h-10 w-10\"\n//     src=\"images/menu-burger-new.png\"\n//     alt=\"menu-icon\"\n//     />\n//     </button>\n//     </div>;\n//   }\n\n//   // // if (isMobile && )\n\n\n//   return (\n//     <>\n//       <div className=\"above-all left-[0] h-full\">\n//         <Sidebar\n//           onClick={() => collapseSidebar(!collapsed)}\n//           className={`umat-logo ${props.className}`}\n//         >\n//           <div className=\"\">\n//             <Img\n//               className=\"cursor-pointer umat-logo md:h-auto mt-[5%] ml-[85%] object-cover w-[29px] \"\n//               src=\"images/left-arrow.png\"\n//               alt=\"lessthan\"\n//             />\n//             <Menu\n//               menuItemStyles={{\n//                 button: {\n//                   padding: \"0 5%\",\n//                   gap: \"12px\",\n//                   margin: \"0 0 10%\",\n//                   color: \"#ffffff\",\n//                   fontWeight: 700,\n//                   fontSize: \"30px\",\n//                   fontFamily: \"Inika\",\n//                 },\n//               }}\n//               className=\"umat-logo flex items-center justify-start mt-[10%] w-full\"\n//             >\n//               <MenuItem\n//                 icon={\n//                   <Img\n//                     className=\"umat-logo common-pointer h-[20px] md:h-[29px] inset-auto object-cover relative w-full\"\n//                     src=\"images/img_umatlogo1.png\"\n//                     alt=\"umatlogoOne\"\n//                     onClick={props?.onClick}\n//                   />\n//                 }\n//               >\n//                 <Text className=\"umat-logo text-[25px] text-shadow-ts\">\n//                   UMaT - TSAP\n//                 </Text>\n//               </MenuItem>\n//             </Menu>\n\n//             <div className=\"pb-[10%] flex justify-center\">\n//               <div>\n//                 <div className=\"\">\n//                   {collapsed && (\n//                     <div className=\"\">\n//                       {/* Render the menu icon only when the sidebar is collapsed */}\n//                       <Img\n//                         className=\"cursor-pointer mb-[50%] h-10 w-10\"\n//                         src=\"images/menu-burger-new.png\"\n//                         alt=\"menu-icon\"\n//                       />\n//                     </div>\n//                   )}\n//                 </div>\n\n//                 <Img\n//                   className=\"mb-[50%] h-10 w-10\"\n//                   src=\"images/img_home.svg\"\n//                   alt=\"home\"\n//                 />\n//                 <Img\n//                   className=\"mb-[50%] h-10 w-10\"\n//                   src=\"images/img_thumbsup.svg\"\n//                   alt=\"thumbsup\"\n//                 />\n//                 <Img\n//                   className=\"mb-[50%] h-10 w-10\"\n//                   src=\"images/img_student.svg\"\n//                   alt=\"student_One\"\n//                 />\n//                 <Img\n//                   className=\"mb-[50%] h-10 w-10\"\n//                   src=\"images/img_thumbsup_blue_gray_200.svg\"\n//                   alt=\"thumbsup_One\"\n//                 />\n//                 <Img\n//                   className=\"mb-[50%] h-10 w-10\"\n//                   src=\"images/img_finance.svg\"\n//                   alt=\"finance\"\n//                 />\n//                 <Img\n//                   className=\"mb-[50%] h-10 w-10\"\n//                   src=\"images/img_calendar.svg\"\n//                   alt=\"calendar\"\n//                 />\n//               </div>\n\n//               <div className=\"umat-logo pl-[10%] \">\n//                 <Text\n//                   className=\"h-10 pt-[8%] mb-[12%] flex text-lg text-white-A700\"\n//                   size=\"txtPoppinsMedium18\"\n//                 >\n//                   Home\n//                 </Text>\n//                 <Text\n//                   className=\"h-10 pt-[8%] mb-[12%] text-lg text-white-A700\"\n//                   size=\"txtPoppinsMedium18\"\n//                 >\n//                   Submissions\n//                 </Text>\n//                 <Text\n//                   className=\"h-10 pt-[8%] mb-[12%] text-lg text-white-A700\"\n//                   size=\"txtPoppinsMedium18\"\n//                 >\n//                   Report\n//                 </Text>\n//                 <Text\n//                   className=\"h-10 pt-[8%] mb-[12%] text-lg text-white-A700\"\n//                   size=\"txtPoppinsMedium18\"\n//                 >\n//                   Event\n//                 </Text>\n//                 <Text\n//                   className=\"h-10 pt-[8%] mb-[12%] text-lg text-white-A700\"\n//                   size=\"txtPoppinsMedium18\"\n//                 >\n//                   Assignments\n//                 </Text>\n//                 <Text\n//                   className=\"h-10 pt-[8%] text-lg text-white-A700\"\n//                   size=\"txtPoppinsMedium18\"\n//                 >\n//                   Announcements\n//                 </Text>\n//               </div>\n//             </div>\n//           </div>\n//         </Sidebar>\n//       </div>\n//     </>\n//   );\n// };\n\n// export default Sidebar1;\n\n\nimport React, { useState, useEffect }  from \"react\";\nimport { Menu, MenuItem, Sidebar, useProSidebar } from \"react-pro-sidebar\";\nimport { Img, Text } from \"components\";\nimport sidebarOverlay from \"components/togglesidebar\";// Import your component\n\nconst Sidebar1 = (props) => {\n  const { collapseSidebar, collapsed } = useProSidebar();\n  const [isMobile, setIsMobile] = useState(false);\n  const [showComponent, setShowComponent] = useState(false); // State to control component rendering\n\n  const handleClick = () => {\n    // Toggle the state to show/hide the component\n    setShowComponent(!showComponent);\n  };\n\n  useEffect(() => {\n    // Function to handle viewport resizing\n    const handleResize = () => {\n      setIsMobile(window.innerWidth <= 576); // Check if viewport is smaller than or equal to \"sm\"\n    };\n\n    // Add event listener for window resize\n    window.addEventListener(\"resize\", handleResize);\n\n    // Call handleResize to set initial state\n    handleResize();\n\n    // Clean up event listener on component unmount\n    return () => {\n      window.removeEventListener(\"resize\", handleResize);\n    };\n  }, []);\n\n  if (isMobile) {\n    // If viewport is smaller than or equal to \"sm\", hide the sidebar completely\n    return (\n      <div className=\"position text-center bg-gray-100\">\n        <button className=\"cursor-pointer\" onClick={handleClick}>\n          <Img\n            className=\"cursor-pointer ml-[20%] mt-5 h-10 w-10\"\n            src=\"images/menu-burger-new.png\"\n            alt=\"menu-icon\"\n          />\n        </button>\n        {showComponent && <sidebarOverlay/>} {/* Render your component based on state */}\n      </div>\n    );\n  }\n\n  return (\n    <>\n      <div className=\"left-[0] h-full\">\n        <Sidebar\n          onClick={() => collapseSidebar(!collapsed)}\n          className={`umat-logo ${props.className}`}\n        >\n          {/* Sidebar content */}\n        </Sidebar>\n      </div>\n    </>\n  );\n};\n\nexport default Sidebar1;\n\n\n"],"mappings":";;AAAA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAS,OAAO;AACnD,SAASC,IAAI,EAAEC,QAAQ,EAAEC,OAAO,EAAEC,aAAa,QAAQ,mBAAmB;AAC1E,SAASC,GAAG,EAAEC,IAAI,QAAQ,YAAY;AACtC,OAAOC,cAAc,MAAM,0BAA0B,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEtD,MAAMC,QAAQ,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC1B,MAAM;IAAEC,eAAe;IAAEC;EAAU,CAAC,GAAGZ,aAAa,CAAC,CAAC;EACtD,MAAM,CAACa,QAAQ,EAAEC,WAAW,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACoB,aAAa,EAAEC,gBAAgB,CAAC,GAAGrB,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAE3D,MAAMsB,WAAW,GAAGA,CAAA,KAAM;IACxB;IACAD,gBAAgB,CAAC,CAACD,aAAa,CAAC;EAClC,CAAC;EAEDnB,SAAS,CAAC,MAAM;IACd;IACA,MAAMsB,YAAY,GAAGA,CAAA,KAAM;MACzBJ,WAAW,CAACK,MAAM,CAACC,UAAU,IAAI,GAAG,CAAC,CAAC,CAAC;IACzC,CAAC;;IAED;IACAD,MAAM,CAACE,gBAAgB,CAAC,QAAQ,EAAEH,YAAY,CAAC;;IAE/C;IACAA,YAAY,CAAC,CAAC;;IAEd;IACA,OAAO,MAAM;MACXC,MAAM,CAACG,mBAAmB,CAAC,QAAQ,EAAEJ,YAAY,CAAC;IACpD,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIL,QAAQ,EAAE;IACZ;IACA,oBACER,OAAA;MAAKkB,SAAS,EAAC,kCAAkC;MAAAC,QAAA,gBAC/CnB,OAAA;QAAQkB,SAAS,EAAC,gBAAgB;QAACE,OAAO,EAAER,WAAY;QAAAO,QAAA,eACtDnB,OAAA,CAACJ,GAAG;UACFsB,SAAS,EAAC,wCAAwC;UAClDG,GAAG,EAAC,4BAA4B;UAChCC,GAAG,EAAC;QAAW;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC,EACRhB,aAAa,iBAAIV,OAAA;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAgB,CAAC,EAAC,GAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC;EAEV;EAEA,oBACE1B,OAAA,CAAAE,SAAA;IAAAiB,QAAA,eACEnB,OAAA;MAAKkB,SAAS,EAAC,iBAAiB;MAAAC,QAAA,eAC9BnB,OAAA,CAACN,OAAO;QACN0B,OAAO,EAAEA,CAAA,KAAMd,eAAe,CAAC,CAACC,SAAS,CAAE;QAC3CW,SAAS,EAAG,aAAYd,KAAK,CAACc,SAAU;MAAE;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGnC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP;EAAC,gBACN,CAAC;AAEP,CAAC;AAACrB,EAAA,CAxDIF,QAAQ;EAAA,QAC2BR,aAAa;AAAA;AAAAgC,EAAA,GADhDxB,QAAQ;AA0Dd,eAAeA,QAAQ;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}