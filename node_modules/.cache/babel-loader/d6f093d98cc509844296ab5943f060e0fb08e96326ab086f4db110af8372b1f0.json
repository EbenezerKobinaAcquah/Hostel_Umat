{"ast":null,"code":"// Import the Building type correctly\n\n// Define hostel data as an array\nconst hostelData = [{\n  id: 1,\n  name: \"Chanmbers\",\n  buildingType: 1,\n  ownershipType: 1,\n  genderOption: 1,\n  geolocation: {\n    longitude: \"-23324456676\",\n    latitude: \"54678665\"\n  },\n  address: \"this is the address of the hostel\",\n  description: \"this is the description of the hostel\",\n  picture: \"images/hostel1.jpeg\",\n  reviews: \"4.5/5 (500 reviews)\",\n  priceRange: \"GHC 3000 - 4000\",\n  amenities: [\"Free Wi-Fi\", \"AC\", \"Gym\", \"DSTV\", \"Car Park\"]\n}, {\n  id: 2,\n  name: \"KT\",\n  buildingType: 1,\n  ownershipType: 1,\n  genderOption: 1,\n  geolocation: {\n    longitude: \"-23324456676\",\n    latitude: \"54678665\"\n  },\n  address: \"this is the address of the hostel\",\n  description: \"this is the description of the hostel\",\n  picture: \"images/hostel1.jpeg\",\n  reviews: \"4.5/5 (500 reviews)\",\n  priceRange: \"GHC 3000 - 4000\",\n  amenities: [\"Free Wi-Fi\", \"AC\", \"Gym\", \"DSTV\", \"Car Park\"]\n}, {\n  id: 3,\n  name: \"Gold Hall\",\n  buildingType: 1,\n  ownershipType: 1,\n  genderOption: 1,\n  geolocation: {\n    longitude: \"-23324456676\",\n    latitude: \"54678665\"\n  },\n  address: \"this is the address of the hostel\",\n  description: \"this is the description of the hostel\",\n  picture: \"images/hostel1.jpeg\",\n  reviews: \"4.5/5 (500 reviews)\",\n  priceRange: \"GHC 3000 - 4000\",\n  amenities: [\"Free Wi-Fi\", \"AC\", \"Gym\", \"DSTV\", \"Car Park\"]\n}];\nexport const HostelService = {\n  getHostels: async () => {\n    // Return the hostel data\n    return hostelData;\n  }\n};","map":{"version":3,"names":["hostelData","id","name","buildingType","ownershipType","genderOption","geolocation","longitude","latitude","address","description","picture","reviews","priceRange","amenities","HostelService","getHostels"],"sources":["C:/Users/ebene/Downloads/umat_acc_application-v1.0.2/src/components/Services/HostelService.ts"],"sourcesContent":["// Import the Building type correctly\r\nimport { Building, Geolocation, Pictures} from \"components/Models/submissions\";\r\n// Define hostel data as an array\r\nconst hostelData: Building[] = [\r\n  \r\n  \r\n\r\n {\r\n    id: 1,\r\n    name: \"Chanmbers\",\r\n    buildingType: 1,\r\n  ownershipType: 1,\r\n  genderOption: 1,\r\n  geolocation: {\r\n    longitude : \"-23324456676\",\r\n    latitude : \"54678665\"\r\n  },\r\n  address: \"this is the address of the hostel\",\r\n  description: \"this is the description of the hostel\",\r\n  picture: \"images/hostel1.jpeg\",\r\n  reviews:\"4.5/5 (500 reviews)\",\r\n  priceRange: \"GHC 3000 - 4000\",\r\n  amenities: [\"Free Wi-Fi\", \"AC\", \"Gym\", \"DSTV\", \"Car Park\"]\r\n },\r\n \r\n\r\n\r\n\r\n\r\n\r\n {\r\n  id: 2,\r\n  name: \"KT\",\r\n  buildingType: 1,\r\nownershipType: 1,\r\ngenderOption: 1,\r\ngeolocation: {\r\n  longitude : \"-23324456676\",\r\n  latitude : \"54678665\"\r\n},\r\naddress: \"this is the address of the hostel\",\r\ndescription: \"this is the description of the hostel\",\r\npicture: \"images/hostel1.jpeg\",\r\nreviews:\"4.5/5 (500 reviews)\",\r\npriceRange: \"GHC 3000 - 4000\",\r\namenities: [\"Free Wi-Fi\", \"AC\", \"Gym\", \"DSTV\", \"Car Park\"]\r\n},\r\n\r\n\r\n{\r\n  id: 3,\r\n  name: \"Gold Hall\",\r\n  buildingType: 1,\r\nownershipType: 1,\r\ngenderOption: 1,\r\ngeolocation: {\r\n  longitude : \"-23324456676\",\r\n  latitude : \"54678665\"\r\n},\r\naddress: \"this is the address of the hostel\",\r\ndescription: \"this is the description of the hostel\",\r\npicture: \"images/hostel1.jpeg\",\r\nreviews:\"4.5/5 (500 reviews)\",\r\npriceRange: \"GHC 3000 - 4000\",\r\namenities: [\"Free Wi-Fi\", \"AC\", \"Gym\", \"DSTV\", \"Car Park\"]\r\n},\r\n\r\n\r\n\r\n]\r\n\r\n\r\n\r\nexport const HostelService = {\r\n    getHostels: async (): Promise<Building[]> => {\r\n        // Return the hostel data\r\n        return hostelData;\r\n    }\r\n};\r\n"],"mappings":"AAAA;;AAEA;AACA,MAAMA,UAAsB,GAAG,CAI9B;EACGC,EAAE,EAAE,CAAC;EACLC,IAAI,EAAE,WAAW;EACjBC,YAAY,EAAE,CAAC;EACjBC,aAAa,EAAE,CAAC;EAChBC,YAAY,EAAE,CAAC;EACfC,WAAW,EAAE;IACXC,SAAS,EAAG,cAAc;IAC1BC,QAAQ,EAAG;EACb,CAAC;EACDC,OAAO,EAAE,mCAAmC;EAC5CC,WAAW,EAAE,uCAAuC;EACpDC,OAAO,EAAE,qBAAqB;EAC9BC,OAAO,EAAC,qBAAqB;EAC7BC,UAAU,EAAE,iBAAiB;EAC7BC,SAAS,EAAE,CAAC,YAAY,EAAE,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,UAAU;AAC1D,CAAC,EAOD;EACCb,EAAE,EAAE,CAAC;EACLC,IAAI,EAAE,IAAI;EACVC,YAAY,EAAE,CAAC;EACjBC,aAAa,EAAE,CAAC;EAChBC,YAAY,EAAE,CAAC;EACfC,WAAW,EAAE;IACXC,SAAS,EAAG,cAAc;IAC1BC,QAAQ,EAAG;EACb,CAAC;EACDC,OAAO,EAAE,mCAAmC;EAC5CC,WAAW,EAAE,uCAAuC;EACpDC,OAAO,EAAE,qBAAqB;EAC9BC,OAAO,EAAC,qBAAqB;EAC7BC,UAAU,EAAE,iBAAiB;EAC7BC,SAAS,EAAE,CAAC,YAAY,EAAE,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,UAAU;AACzD,CAAC,EAGD;EACEb,EAAE,EAAE,CAAC;EACLC,IAAI,EAAE,WAAW;EACjBC,YAAY,EAAE,CAAC;EACjBC,aAAa,EAAE,CAAC;EAChBC,YAAY,EAAE,CAAC;EACfC,WAAW,EAAE;IACXC,SAAS,EAAG,cAAc;IAC1BC,QAAQ,EAAG;EACb,CAAC;EACDC,OAAO,EAAE,mCAAmC;EAC5CC,WAAW,EAAE,uCAAuC;EACpDC,OAAO,EAAE,qBAAqB;EAC9BC,OAAO,EAAC,qBAAqB;EAC7BC,UAAU,EAAE,iBAAiB;EAC7BC,SAAS,EAAE,CAAC,YAAY,EAAE,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,UAAU;AACzD,CAAC,CAIA;AAID,OAAO,MAAMC,aAAa,GAAG;EACzBC,UAAU,EAAE,MAAAA,CAAA,KAAiC;IACzC;IACA,OAAOhB,UAAU;EACrB;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}